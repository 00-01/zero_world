version: "3.8"

services:
  backend:
    build: ./backend
    expose:
      - "8000"
    volumes:
      - ./backend/app:/usr/src/app/app
    depends_on:
      - mongodb
    environment:
      - MONGODB_URL=${MONGODB_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    ports:
      - "0.0.0.0:${MONGODB_PORT}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    command: ["mongod", "--bind_ip_all", "--auth"]
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend/zero_world
      dockerfile: Dockerfile
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/ssl/certs/zn-01.com.crt:/etc/ssl/certs/zn-01.com.crt:ro
      - /etc/ssl/private/zn-01.com.key:/etc/ssl/private/zn-01.com.key:ro
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  mongodb_data:
