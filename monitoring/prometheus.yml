# Prometheus Configuration for Zero World
# Global-scale monitoring setup

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'zero-world-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "alerts/*.yml"

# Scrape configurations
scrape_configs:
  # ============================================
  # PROMETHEUS SELF-MONITORING
  # ============================================
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # ============================================
  # KUBERNETES METRICS
  # ============================================
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # ============================================
  # APPLICATION SERVICES
  # ============================================
  - job_name: 'auth-service'
    static_configs:
      - targets: ['auth-service:8000']
    metrics_path: '/metrics'
    scrape_interval: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: service
        replacement: 'auth-service'

  - job_name: 'social-service'
    static_configs:
      - targets: ['social-service:8000']
    metrics_path: '/metrics'
    scrape_interval: 10s
    relabel_configs:
      - target_label: service
        replacement: 'social-service'

  - job_name: 'marketplace-service'
    static_configs:
      - targets: ['marketplace-service:8000']
    metrics_path: '/metrics'
    scrape_interval: 10s
    relabel_configs:
      - target_label: service
        replacement: 'marketplace-service'

  - job_name: 'payment-service'
    static_configs:
      - targets: ['payment-service:8000']
    metrics_path: '/metrics'
    scrape_interval: 5s  # More frequent for payment monitoring
    relabel_configs:
      - target_label: service
        replacement: 'payment-service'

  - job_name: 'notification-service'
    static_configs:
      - targets: ['notification-service:8000']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'messaging-service'
    static_configs:
      - targets: ['messaging-service:8000']
    metrics_path: '/metrics'
    scrape_interval: 5s  # Real-time messaging needs frequent monitoring

  - job_name: 'search-service'
    static_configs:
      - targets: ['search-service:8000']
    metrics_path: '/metrics'
    scrape_interval: 10s

  # ============================================
  # DATABASES & INFRASTRUCTURE
  # ============================================
  - job_name: 'mongodb'
    static_configs:
      - targets: ['mongodb-exporter:9216']
    scrape_interval: 30s
    relabel_configs:
      - target_label: database
        replacement: 'mongodb'

  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 15s
    relabel_configs:
      - target_label: database
        replacement: 'redis'

  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    relabel_configs:
      - target_label: database
        replacement: 'postgres'

  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['elasticsearch-exporter:9114']
    scrape_interval: 30s

  - job_name: 'rabbitmq'
    static_configs:
      - targets: ['rabbitmq:15692']
    scrape_interval: 30s

  # ============================================
  # NGINX & API GATEWAY
  # ============================================
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 15s
    relabel_configs:
      - target_label: component
        replacement: 'nginx'

  - job_name: 'kong'
    static_configs:
      - targets: ['kong:8001']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # ============================================
  # NODE EXPORTERS (System Metrics)
  # ============================================
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance

  # ============================================
  # BLACKBOX EXPORTER (Uptime Monitoring)
  # ============================================
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - https://www.zn-01.com
          - https://api.zn-01.com/health
          - https://api.zn-01.com/api/v1/auth/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  - job_name: 'blackbox-tcp'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
          - mongodb:27017
          - redis:6379
          - postgres:5432
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # ============================================
  # CUSTOM APPLICATION METRICS
  # ============================================
  - job_name: 'business-metrics'
    static_configs:
      - targets: ['auth-service:8000', 'social-service:8000', 'marketplace-service:8000']
    metrics_path: '/metrics/business'
    scrape_interval: 60s  # Business metrics less frequent
    relabel_configs:
      - target_label: metric_type
        replacement: 'business'

# Remote write configuration for long-term storage
remote_write:
  - url: "http://thanos-receive:19291/api/v1/receive"
    queue_config:
      capacity: 10000
      max_shards: 50
      min_shards: 1
      max_samples_per_send: 5000
      batch_send_deadline: 5s
      min_backoff: 30ms
      max_backoff: 100ms

# Remote read configuration
remote_read:
  - url: "http://thanos-query:9090/api/v1/read"
    read_recent: true
