# Kubernetes Deployment Configuration
# For global-scale Zero World deployment

apiVersion: v1
kind: Namespace
metadata:
  name: zero-world-production

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: zero-world-production
data:
  ENVIRONMENT: "production"
  LOG_LEVEL: "info"
  API_GATEWAY_URL: "http://api-gateway:8000"
  MONGODB_DATABASE: "zero_world"
  REDIS_TTL: "3600"
  MAX_CONNECTIONS: "1000"
  REQUEST_TIMEOUT: "30"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: zero-world-production
  labels:
    app: auth-service
    version: v1
spec:
  replicas: 10  # Scale for 100M users
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
        version: v1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - auth-service
              topologyKey: kubernetes.io/hostname
      containers:
      - name: auth-service
        image: zero-world/auth-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: mongodb-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: jwt-secret
        envFrom:
        - configMapRef:
            name: app-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]

---

apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: zero-world-production
  labels:
    app: auth-service
spec:
  type: ClusterIP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: auth-service

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-service-hpa
  namespace: zero-world-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 10
  maxReplicas: 100
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 5
        periodSeconds: 60
      selectPolicy: Max

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: social-service
  namespace: zero-world-production
  labels:
    app: social-service
    version: v1
spec:
  replicas: 20
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 2
  selector:
    matchLabels:
      app: social-service
  template:
    metadata:
      labels:
        app: social-service
        version: v1
    spec:
      containers:
      - name: social-service
        image: zero-world/social-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: mongodb-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: redis-url
        - name: S3_BUCKET
          value: "zero-world-media-production"
        - name: AWS_REGION
          value: "us-east-1"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: secret-access-key
        resources:
          requests:
            memory: "1Gi"
            cpu: "1000m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5

---

apiVersion: v1
kind: Service
metadata:
  name: social-service
  namespace: zero-world-production
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  selector:
    app: social-service

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: social-service-hpa
  namespace: zero-world-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: social-service
  minReplicas: 20
  maxReplicas: 200
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zero-world-ingress
  namespace: zero-world-production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://www.zn-01.com"
spec:
  tls:
  - hosts:
    - www.zn-01.com
    - api.zn-01.com
    secretName: zero-world-tls
  rules:
  - host: www.zn-01.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80
  - host: api.zn-01.com
    http:
      paths:
      - path: /api/v1/auth
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 8000
      - path: /api/v1/social
        pathType: Prefix
        backend:
          service:
            name: social-service
            port:
              number: 8000
      - path: /api/v1/marketplace
        pathType: Prefix
        backend:
          service:
            name: marketplace-service
            port:
              number: 8000

---

apiVersion: v1
kind: Secret
metadata:
  name: database-secrets
  namespace: zero-world-production
type: Opaque
data:
  mongodb-url: <base64-encoded-mongodb-connection-string>
  redis-url: <base64-encoded-redis-connection-string>

---

apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: zero-world-production
type: Opaque
data:
  jwt-secret: <base64-encoded-jwt-secret>
  stripe-secret: <base64-encoded-stripe-secret>
  paypal-client-secret: <base64-encoded-paypal-secret>

---

apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: auth-service-pdb
  namespace: zero-world-production
spec:
  minAvailable: 5
  selector:
    matchLabels:
      app: auth-service

---

apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: social-service-pdb
  namespace: zero-world-production
spec:
  minAvailable: 10
  selector:
    matchLabels:
      app: social-service

---

# Network Policy for Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: zero-world-network-policy
  namespace: zero-world-production
spec:
  podSelector:
    matchLabels:
      app: auth-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: mongodb
    ports:
    - protocol: TCP
      port: 27017
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
